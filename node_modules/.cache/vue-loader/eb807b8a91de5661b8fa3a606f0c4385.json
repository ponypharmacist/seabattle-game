{"remainingRequest":"D:\\git\\warships-evasive\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\git\\warships-evasive\\src\\components\\FieldGridOpponent.vue?vue&type=style&index=0&lang=sass&","dependencies":[{"path":"D:\\git\\warships-evasive\\src\\components\\FieldGridOpponent.vue","mtime":1555578711914},{"path":"D:\\git\\warships-evasive\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\git\\warships-evasive\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\git\\warships-evasive\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\git\\warships-evasive\\node_modules\\sass-loader\\lib\\loader.js","mtime":1533139052000},{"path":"D:\\git\\warships-evasive\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\warships-evasive\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* Field Grid */\n.field-grid\n  display: grid\n  width: 100%\n  height: 100%\n  grid-template-columns: repeat(10, 1fr)\n  grid-template-rows: repeat(10, 1fr)\n  grid-gap: 2px\n  padding: 2px\n\n.field-grid > div\n  position: relative\n  background-color: rgba(255, 255, 255, 0.1)\n  user-select: none\n\n.goPlayerOne,\n.goPlayerTwo\n  #fieldMy .field-grid > div,\n  #fieldMy .field-grid > div:hover\n    background-color: rgba(255, 255, 255, 0.05)\n\n/* Grid interactions */\n.field-grid > div:hover\n  background-color: rgba(255, 255, 255, 0.2)\n\n.field-grid > div:hover:after\n  position: absolute\n  display: block\n  content: ''\n  width: 100%\n  height: 100%\n  top: 0\n  left: 0\n  background-repeat: no-repeat\n  background-size: cover\n\n.field-grid > div.forbidden\n  background: transparent url('../assets/cross.svg') no-repeat 50% 50% / 50% 50%\n\n.goPlayerOne,\n.goPlayerTwo,\n.readyPlayerOne,\n.readyPlayerTwo\n  #fieldMy .field-grid > div.forbidden\n    background: transparent url('../assets/cross.svg') no-repeat 50% 50% / 20% 20%\n\n.field-grid > div.mine\n  background: transparent url('../assets/mine.svg') no-repeat 50% 50% / 60% 60%\n\n.field-grid > div.mine.isShip\n  border: 2px solid #644932\n  background: #a47d52 url('../assets/explosion.svg') no-repeat 50% 50% / 75% 75%\n\n.field-grid > div.forbidden:after,\n.field-grid > div.isShip:after,\n.goPlayerOne .field-grid > div:after,\n.goPlayerTwo .field-grid > div:after\n  display: none\n\n.place-big .field-grid > div:hover:after\n  width: 4.4vw\n  height: 17.6vw\n  background-image: url('../assets/ship-vertical-4.png')\n\n.place-big.orient-width .field-grid > div:hover:after\n  width: 17.6vw\n  height: 4.4vw\n  background-image: url('../assets/ship-horizontal-4.png')\n\n.place-medium .field-grid > div:hover:after\n  width: 4.4vw\n  height: 13.2vw\n  background-image: url('../assets/ship-vertical-3.png')\n\n.place-medium.orient-width .field-grid > div:hover:after\n  width: 13.2vw\n  height: 4.4vw\n  background-image: url('../assets/ship-horizontal-3.png')\n\n.place-small .field-grid > div:hover:after\n  width: 4.4vw\n  height: 8.8vw\n  background-image: url('../assets/ship-vertical-2.png')\n\n.place-small.orient-width .field-grid > div:hover:after\n  width: 8.8vw\n  height: 4.4vw\n  background-image: url('../assets/ship-horizontal-2.png')\n\n.place-tiny .field-grid > div:hover:after\n  width: 4.4vw\n  height: 4.4vw\n  background-image: url('../assets/ship-1.png')\n\n",{"version":3,"sources":["FieldGridOpponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"FieldGridOpponent.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"pug\">\n  \n  .field-grid\n    template(v-if=\"this.getCurrentPlayer == this.player && !(this.getCurrentPhase == 'goPlayerOne' || this.getCurrentPhase == 'goPlayerTwo')\")\n      template(v-for=\"(row, indexRow) in this.getFieldByParams(this.player)\")\n        div(v-for=\"(cell, indexCell) in row\"\n            @click=\"cell.forbid ? printForbidden() : placeShip(indexRow, indexCell)\"\n            :class=\"{ forbidden: cell.forbid, isShip: cell.ship, mine: cell.mine }\")\n    \n    template(v-if=\"this.getCurrentPlayer == this.player && (this.getCurrentPhase == 'goPlayerOne' || this.getCurrentPhase == 'goPlayerTwo')\")\n      template(v-for=\"(row, indexRow) in this.getFieldByParams(this.player)\")\n        div(v-for=\"(cell, indexCell) in row\"\n            :class=\"{ forbidden: cell.forbid, isShip: cell.ship, mine: cell.mine }\")\n    \n    template(v-if=\"!(this.getCurrentPlayer == this.player)\")\n      template(v-for=\"(row, indexRow) in this.getFieldByParams(this.player)\")\n        div(v-for=\"(cell, indexCell) in row\"\n            @click=\"fireCannon(indexRow, indexCell)\"\n            :class=\"{ fire: true, isShip: cell.ship, mine: cell.mine }\")\n\n</template>\n\n<script>\nimport { mapGetters, mapMutations } from 'vuex'\n\nexport default {\n  name: 'FieldGridOpponent',\n  props: {\n    player: String,\n  },\n\n  computed: {\n    ...mapGetters([\n      'getCurrentPhase',\n      'getCurrentPlayer',\n      'getOpponent',\n      'getFieldByParams',\n      'getShipsAvailableByType',\n      'getShipsAvailableAll',\n      'shipPlaceOrientation',\n      'shipPlaceType',\n      'isTileForbidden',\n      'isTileShip',\n      'opponentFieldCheck',\n    ]),\n  },\n\n  methods: {\n    ...mapMutations([\n      'sendAlertMessage',\n      'placeShipHead',\n      'placeShipTiles',\n      'placeForbiddenTiles',\n      'placeMine',\n      'setShipType',\n      'markShipDamaged',\n    ]),\n\n    fireCannon (row, col) {\n      let alertResult = 'You miss.'\n      // 1. Is this a hit?\n      if ( this.opponentFieldCheck(row, col, 'ship') ) {\n        // 2. Mark ship as isDamaged\n        this.markShipDamaged({row: row, col: col})\n        alertResult = 'Let them burn!'\n      }\n      // 3. Place a mine mark\n      if ( this.opponentFieldCheck(row, col, 'mine') ) {\n        alertResult = 'This tile is already hit, try another one.'\n      } else {\n        this.placeMine({row: row, col: col})\n      }\n      // 4. Display alert\n      this.sendAlertMessage('Fire the cannon: (' + (row + 1) + ', ' + (col + 1) + ')! ' + alertResult)\n    },\n\n    placeShip (row, col) {\n      let type = this.shipPlaceType\n      // Check if there are available ships of selected type\n      if ( this.getShipsAvailableByType(type) <= 0 ) {\n        this.sendAlertMessage('No more ships of this size left to place.')\n        return\n      }\n      // Determine size\n      let orientation = this.shipPlaceOrientation\n      let size = 1\n      if (type == 'big') {\n        size = 4\n      } else if (type == 'medium') {\n        size = 3\n      } else if (type == 'small') {\n        size = 2\n      } else {\n        size = 1\n      }\n      // Check if placeable\n      let shipTiles = this.getShipTiles(row, col, orientation, size)\n      let isPlaceable = this.checkPlaceability (row, col, orientation, size, shipTiles)\n      if ( isPlaceable ) {\n        // Place head\n        this.placeShipHead ({row: row, col: col, type: type, size: size, orientation: orientation, tiles: shipTiles})\n        // Place ship tiles\n        this.placeShipTiles (shipTiles)\n        // Place forbidden tiles\n        let forbidTiles = this.getTilesToForbid(row, col, orientation, size)\n        this.placeForbiddenTiles (forbidTiles)\n      } else {\n        return\n      }\n      // Cycle ship selection buttons\n      this.switchShipButtons(type)\n    },\n\n    // Switch ship type button to the right if no more ships of this type left\n    switchShipButtons (type) {\n      if (this.getShipsAvailableByType(type) == 0) {\n        if (type == 'big') {\n          this.setShipType('medium')\n        } else if (type == 'medium') {\n          this.setShipType('small')\n        } else if (type == 'small') {\n          this.setShipType('tiny')\n        }\n      }\n    },\n\n    // Generate a list of ship tiles\n    getShipTiles (row, col, orientation, size) {\n      var shipTiles = [{row: row, col: col}]\n      for (let i = 1; i < size; i++) {\n        if (orientation == 'width') {\n          shipTiles.push({row: row, col: col + i})\n        } else {\n          shipTiles.push({row: row + i, col: col})\n        }\n      }\n      return shipTiles\n    },\n\n    getTilesToForbid (row, col, orientation, size) {\n      let forbidTiles = []\n\n      if (orientation == 'width') {\n        let rowWidth = size + 2\n        for (let i = 0; i < rowWidth; i++) {\n          if ( 0 <= (row - 1) && 0 <= (col - 1 + i) && (col - 1 + i) <= 9 ) {\n            forbidTiles.push({ row: row - 1, col: col - 1 + i })\n          }\n          if ( (row + 1) <= 9 && 0 <= (col - 1 + i) && (col - 1 + i) <= 9 ) {\n            forbidTiles.push({ row: row + 1, col: col - 1 + i })\n          }\n        }\n        if( 0 <= (col - 1) ) { forbidTiles.push({ row: row, col: col - 1 }) }\n        if( (col + size) <= 9 ) { forbidTiles.push({ row: row, col: col + size }) }\n      } else {\n        let rowHeight = size + 2\n        for (let j = 0; j < rowHeight; j++) {\n          if ( 0 <= (col - 1) && 0 <= (row - 1 + j) && (row - 1 + j) <= 9 ) {\n            forbidTiles.push({ col: col - 1, row: row - 1 + j })\n          }\n          if ( (col + 1) <= 9 && 0 <= (row - 1 + j) && (row - 1 + j) <= 9 ) {\n            forbidTiles.push({ col: col + 1, row: row - 1 + j })\n          }\n        }\n        if( 0 <= (row - 1) ) { forbidTiles.push({ row: row - 1, col: col }) }\n        if( (row + size) <= 9 ) { forbidTiles.push({ row: row + size, col: col }) }\n      }\n\n      return forbidTiles\n    },\n\n    checkPlaceability (row, col, orientation, size, shipTiles) {\n      let shipEnd = {row: row, col: col}\n\n      if (orientation == 'width') {\n        shipEnd.col = col - 1 + size\n      } else {\n        shipEnd.row = row - 1 + size\n      }\n      // 1. Check if ship sticks outside the board\n      if (shipEnd.col > 9 || shipEnd.row > 9) {\n        this.sendAlertMessage('Ship cant stick outside the board!')\n        return false\n      }\n      // 2. Check if ship tiles will cross with forbidden\n      // 2.1. Check each ship tile against forbidden cells and ship cells\n      for (let tile of shipTiles) {\n        if ( this.isTileForbidden(tile.row, tile.col) || this.isTileShip(tile.row, tile.col) ) {\n          this.sendAlertMessage('Ship cant place on occupied tiles!')\n          return false\n        }\n      }\n      return true \n    },\n\n    printForbidden () {\n      this.sendAlertMessage('This place is not empty!')\n    },\n  }\n\n}\n</script>\n\n<style lang=\"sass\">\n/* Field Grid */\n.field-grid\n  display: grid\n  width: 100%\n  height: 100%\n  grid-template-columns: repeat(10, 1fr)\n  grid-template-rows: repeat(10, 1fr)\n  grid-gap: 2px\n  padding: 2px\n\n.field-grid > div\n  position: relative\n  background-color: rgba(255, 255, 255, 0.1)\n  user-select: none\n\n.goPlayerOne,\n.goPlayerTwo\n  #fieldMy .field-grid > div,\n  #fieldMy .field-grid > div:hover\n    background-color: rgba(255, 255, 255, 0.05)\n\n/* Grid interactions */\n.field-grid > div:hover\n  background-color: rgba(255, 255, 255, 0.2)\n\n.field-grid > div:hover:after\n  position: absolute\n  display: block\n  content: ''\n  width: 100%\n  height: 100%\n  top: 0\n  left: 0\n  background-repeat: no-repeat\n  background-size: cover\n\n.field-grid > div.forbidden\n  background: transparent url('../assets/cross.svg') no-repeat 50% 50% / 50% 50%\n\n.goPlayerOne,\n.goPlayerTwo,\n.readyPlayerOne,\n.readyPlayerTwo\n  #fieldMy .field-grid > div.forbidden\n    background: transparent url('../assets/cross.svg') no-repeat 50% 50% / 20% 20%\n\n.field-grid > div.mine\n  background: transparent url('../assets/mine.svg') no-repeat 50% 50% / 60% 60%\n\n.field-grid > div.mine.isShip\n  border: 2px solid #644932\n  background: #a47d52 url('../assets/explosion.svg') no-repeat 50% 50% / 75% 75%\n\n.field-grid > div.forbidden:after,\n.field-grid > div.isShip:after,\n.goPlayerOne .field-grid > div:after,\n.goPlayerTwo .field-grid > div:after\n  display: none\n\n.place-big .field-grid > div:hover:after\n  width: 4.4vw\n  height: 17.6vw\n  background-image: url('../assets/ship-vertical-4.png')\n\n.place-big.orient-width .field-grid > div:hover:after\n  width: 17.6vw\n  height: 4.4vw\n  background-image: url('../assets/ship-horizontal-4.png')\n\n.place-medium .field-grid > div:hover:after\n  width: 4.4vw\n  height: 13.2vw\n  background-image: url('../assets/ship-vertical-3.png')\n\n.place-medium.orient-width .field-grid > div:hover:after\n  width: 13.2vw\n  height: 4.4vw\n  background-image: url('../assets/ship-horizontal-3.png')\n\n.place-small .field-grid > div:hover:after\n  width: 4.4vw\n  height: 8.8vw\n  background-image: url('../assets/ship-vertical-2.png')\n\n.place-small.orient-width .field-grid > div:hover:after\n  width: 8.8vw\n  height: 4.4vw\n  background-image: url('../assets/ship-horizontal-2.png')\n\n.place-tiny .field-grid > div:hover:after\n  width: 4.4vw\n  height: 4.4vw\n  background-image: url('../assets/ship-1.png')\n\n</style>\n"]}]}
{"remainingRequest":"D:\\git\\warships-evasive\\node_modules\\babel-loader\\lib\\index.js!D:\\git\\warships-evasive\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\git\\warships-evasive\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\git\\warships-evasive\\src\\components\\FieldGridOpponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\git\\warships-evasive\\src\\components\\FieldGridOpponent.vue","mtime":1556557786831},{"path":"D:\\git\\warships-evasive\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\warships-evasive\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\git\\warships-evasive\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\warships-evasive\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"D:\\\\git\\\\warships-evasive\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapMutations } from 'vuex';\nexport default {\n  name: 'FieldGridOpponent',\n  props: {\n    player: String\n  },\n  computed: _objectSpread({}, mapGetters(['isShotsLeft', 'getFieldByParams', 'opponentFieldCheck', 'getDamagedShip', 'isShipDead', 'checkWinCondition'])),\n  methods: _objectSpread({}, mapMutations(['sendAlertMessage', 'placeMine', 'markShipDamaged', 'markShipDead', 'placeDeadTiles', 'reduceShotsAvailable', 'setLastShot']), {\n    fireCannon: function fireCannon(row, col) {\n      var alertResult = 'Мимо.'; // 0. Check if any shots left for this turn\n\n      if (!this.isShotsLeft) {\n        alertResult = 'Пиратский бюджет позволяет тратить лишь одну бомбу в ход, капитан.';\n        this.sendAlertMessage(alertResult);\n        return;\n      } // 0. Place a mine mark\n\n\n      if (this.opponentFieldCheck(row, col, 'mine') || this.opponentFieldCheck(row, col, 'dead')) {\n        alertResult = 'Сюда мы уже стреляли, капитан.';\n      } else {\n        this.placeMine({\n          row: row,\n          col: col\n        });\n        this.reduceShotsAvailable();\n        this.setLastShot({\n          row: row + 1,\n          col: col + 1\n        });\n      } // 1. Is this a hit?\n\n\n      if (this.opponentFieldCheck(row, col, 'ship')) {\n        // 2. Mark ship as isDamaged\n        this.markShipDamaged({\n          row: row,\n          col: col\n        });\n        alertResult = 'Вражеский корабль поражен!'; // 3. Is this ship completely dead?\n\n        var damagedShip = this.getDamagedShip(row, col);\n\n        if (this.isShipDead(damagedShip)) {\n          this.markShipDead(damagedShip);\n          this.placeDeadTiles(damagedShip);\n          alertResult = 'Вражеский корабль потоплен! Насилуйте сундуки и вскрывайте девок!';\n\n          if (this.checkWinCondition) {\n            alertResult = 'Все враги повержены. Ты - самый крутой пират этих морей, капитан!';\n          }\n        }\n      } // 4. Display alert\n\n\n      this.sendAlertMessage(alertResult);\n    }\n  })\n};",{"version":3,"sources":["FieldGridOpponent.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA,SAAA,UAAA,EAAA,YAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,mBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GAFA;AAMA,EAAA,QAAA,oBACA,UAAA,CAAA,CACA,aADA,EAEA,kBAFA,EAGA,oBAHA,EAIA,gBAJA,EAKA,YALA,EAMA,mBANA,CAAA,CADA,CANA;AAiBA,EAAA,OAAA,oBACA,YAAA,CAAA,CACA,kBADA,EAEA,WAFA,EAGA,iBAHA,EAIA,cAJA,EAKA,gBALA,EAMA,sBANA,EAOA,aAPA,CAAA,CADA;AAWA,IAAA,UAXA,sBAWA,GAXA,EAWA,GAXA,EAWA;AACA,UAAA,WAAA,GAAA,OAAA,CADA,CAEA;;AACA,UAAA,CAAA,KAAA,WAAA,EAAA;AACA,QAAA,WAAA,GAAA,oEAAA;AACA,aAAA,gBAAA,CAAA,WAAA;AACA;AACA,OAPA,CAQA;;;AACA,UAAA,KAAA,kBAAA,CAAA,GAAA,EAAA,GAAA,EAAA,MAAA,KAAA,KAAA,kBAAA,CAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA;AACA,QAAA,WAAA,GAAA,gCAAA;AACA,OAFA,MAEA;AACA,aAAA,SAAA,CAAA;AAAA,UAAA,GAAA,EAAA,GAAA;AAAA,UAAA,GAAA,EAAA;AAAA,SAAA;AACA,aAAA,oBAAA;AACA,aAAA,WAAA,CAAA;AAAA,UAAA,GAAA,EAAA,GAAA,GAAA,CAAA;AAAA,UAAA,GAAA,EAAA,GAAA,GAAA;AAAA,SAAA;AACA,OAfA,CAgBA;;;AACA,UAAA,KAAA,kBAAA,CAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA;AACA;AACA,aAAA,eAAA,CAAA;AAAA,UAAA,GAAA,EAAA,GAAA;AAAA,UAAA,GAAA,EAAA;AAAA,SAAA;AACA,QAAA,WAAA,GAAA,4BAAA,CAHA,CAIA;;AACA,YAAA,WAAA,GAAA,KAAA,cAAA,CAAA,GAAA,EAAA,GAAA,CAAA;;AACA,YAAA,KAAA,UAAA,CAAA,WAAA,CAAA,EAAA;AACA,eAAA,YAAA,CAAA,WAAA;AACA,eAAA,cAAA,CAAA,WAAA;AACA,UAAA,WAAA,GAAA,mEAAA;;AACA,cAAA,KAAA,iBAAA,EAAA;AACA,YAAA,WAAA,GAAA,mEAAA;AACA;AACA;AACA,OA/BA,CAgCA;;;AACA,WAAA,gBAAA,CAAA,WAAA;AACA;AA7CA;AAjBA,CAAA","sourcesContent":["<template lang=\"pug\">\n  \n  .field-grid\n    template\n      template(v-for=\"(row, indexRow) in this.getFieldByParams(this.player)\")\n        div(v-for=\"(cell, indexCell) in row\"\n            @click=\"fireCannon(indexRow, indexCell)\"\n            :class=\"{ isShip: cell.ship, mine: cell.mine, dead: cell.dead }\")\n\n</template>\n\n<script>\nimport { mapGetters, mapMutations } from 'vuex'\n\nexport default {\n  name: 'FieldGridOpponent',\n  props: {\n    player: String,\n  },\n\n  computed: {\n    ...mapGetters([\n      'isShotsLeft',\n      'getFieldByParams',\n      'opponentFieldCheck',\n      'getDamagedShip',\n      'isShipDead',\n      'checkWinCondition',\n    ]),\n  },\n\n  methods: {\n    ...mapMutations([\n      'sendAlertMessage',\n      'placeMine',\n      'markShipDamaged',\n      'markShipDead',\n      'placeDeadTiles',\n      'reduceShotsAvailable',\n      'setLastShot',\n    ]),\n\n    fireCannon (row, col) {\n      let alertResult = 'Мимо.'\n      // 0. Check if any shots left for this turn\n      if (!this.isShotsLeft) {\n        alertResult = 'Пиратский бюджет позволяет тратить лишь одну бомбу в ход, капитан.'\n        this.sendAlertMessage(alertResult)\n        return\n      }\n      // 0. Place a mine mark\n      if ( this.opponentFieldCheck(row, col, 'mine') || this.opponentFieldCheck(row, col, 'dead') ) {\n        alertResult = 'Сюда мы уже стреляли, капитан.'\n      } else {\n        this.placeMine({row: row, col: col})\n        this.reduceShotsAvailable()\n        this.setLastShot({row: row + 1, col: col + 1})\n      }\n      // 1. Is this a hit?\n      if ( this.opponentFieldCheck(row, col, 'ship') ) {\n        // 2. Mark ship as isDamaged\n        this.markShipDamaged({row: row, col: col})\n        alertResult = 'Вражеский корабль поражен!'\n        // 3. Is this ship completely dead?\n        let damagedShip = this.getDamagedShip(row, col)\n        if ( this.isShipDead(damagedShip) ) {\n          this.markShipDead(damagedShip)\n          this.placeDeadTiles(damagedShip)\n          alertResult = 'Вражеский корабль потоплен! Насилуйте сундуки и вскрывайте девок!'\n          if ( this.checkWinCondition ) {\n            alertResult = 'Все враги повержены. Ты - самый крутой пират этих морей, капитан!'\n          }\n        }\n      }\n      // 4. Display alert\n      this.sendAlertMessage(alertResult)\n    },\n\n  }\n\n}\n</script>\n\n<style lang=\"sass\">\n</style>\n"],"sourceRoot":"src/components"}]}
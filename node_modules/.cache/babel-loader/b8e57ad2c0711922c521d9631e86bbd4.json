{"remainingRequest":"D:\\git\\warships-evasive\\node_modules\\babel-loader\\lib\\index.js!D:\\git\\warships-evasive\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\git\\warships-evasive\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\git\\warships-evasive\\src\\components\\FieldGrid.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\git\\warships-evasive\\src\\components\\FieldGrid.vue","mtime":1557913826968},{"path":"D:\\git\\warships-evasive\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\warships-evasive\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\git\\warships-evasive\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\warships-evasive\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _getIterator from \"D:\\\\git\\\\warships-evasive\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/get-iterator\";\nimport _objectSpread from \"D:\\\\git\\\\warships-evasive\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapMutations } from 'vuex';\nexport default {\n  name: 'FieldGrid',\n  props: {\n    player: String\n  },\n  computed: _objectSpread({}, mapGetters(['getFieldByParams', 'getShipsAvailableByType', 'getShipsAvailableAll', 'isTileForbidden', 'isTileShip', 'opponentFieldCheck'])),\n  methods: _objectSpread({}, mapMutations(['sendAlertMessage', 'placeShipHead', 'placeShipTiles', 'placeForbiddenTiles', 'placeMine', 'setShipType', 'markShipDamaged']), {\n    placeShip: function placeShip(row, col) {\n      var type = this.$store.state.shipPlaceType; // Check if there are available ships of selected type\n\n      if (this.getShipsAvailableAll <= 0) {\n        this.sendAlertMessage('Все корабли запущены. Пора идти в атаку.');\n        return;\n      } else if (this.getShipsAvailableByType(type) <= 0) {\n        this.sendAlertMessage('Таких кораблей больше нет. Пиратский бюджет, крюком его по япкам!');\n        this.switchShipButtons(type);\n        return;\n      } // Determine size\n\n\n      var orientation = this.$store.state.shipPlaceOrientation;\n      var size = 1;\n\n      if (type == 'big') {\n        size = 4;\n      } else if (type == 'medium') {\n        size = 3;\n      } else if (type == 'small') {\n        size = 2;\n      } else {\n        size = 1;\n      } // Check if placeable\n\n\n      var shipTiles = this.getShipTiles(row, col, orientation, size);\n      var isPlaceable = this.checkPlaceability(row, col, orientation, size, shipTiles);\n\n      if (isPlaceable) {\n        // Place head\n        this.placeShipHead({\n          row: row,\n          col: col,\n          type: type,\n          size: size,\n          orientation: orientation,\n          tiles: shipTiles\n        }); // Place ship tiles\n\n        this.placeShipTiles(shipTiles); // Place forbidden tiles\n\n        var forbidTiles = this.getTilesToForbid(row, col, orientation, size);\n        this.placeForbiddenTiles(forbidTiles);\n      } else {\n        return;\n      } // Cycle ship selection buttons\n\n\n      this.switchShipButtons(type);\n    },\n    // Switch ship type button to the right if no more ships of this type left\n    switchShipButtons: function switchShipButtons(type) {\n      if (this.getShipsAvailableByType(type) == 0) {\n        if (type == 'big') {\n          this.setShipType('medium');\n        } else if (type == 'medium') {\n          this.setShipType('small');\n        } else if (type == 'small') {\n          this.setShipType('tiny');\n        } else if (type == 'tiny' && this.getShipsAvailableAll !== 0) {\n          this.setShipType('big');\n        }\n      }\n    },\n    // Generate a list of ship tiles\n    getShipTiles: function getShipTiles(row, col, orientation, size) {\n      var shipTiles = [{\n        row: row,\n        col: col\n      }];\n\n      for (var i = 1; i < size; i++) {\n        if (orientation == 'width') {\n          shipTiles.push({\n            row: row,\n            col: col + i\n          });\n        } else {\n          shipTiles.push({\n            row: row + i,\n            col: col\n          });\n        }\n      }\n\n      return shipTiles;\n    },\n    getTilesToForbid: function getTilesToForbid(row, col, orientation, size) {\n      var forbidTiles = [];\n\n      if (orientation == 'width') {\n        var rowWidth = size + 2;\n\n        for (var i = 0; i < rowWidth; i++) {\n          if (0 <= row - 1 && 0 <= col - 1 + i && col - 1 + i <= 9) {\n            forbidTiles.push({\n              row: row - 1,\n              col: col - 1 + i\n            });\n          }\n\n          if (row + 1 <= 9 && 0 <= col - 1 + i && col - 1 + i <= 9) {\n            forbidTiles.push({\n              row: row + 1,\n              col: col - 1 + i\n            });\n          }\n        }\n\n        if (0 <= col - 1) {\n          forbidTiles.push({\n            row: row,\n            col: col - 1\n          });\n        }\n\n        if (col + size <= 9) {\n          forbidTiles.push({\n            row: row,\n            col: col + size\n          });\n        }\n      } else {\n        var rowHeight = size + 2;\n\n        for (var j = 0; j < rowHeight; j++) {\n          if (0 <= col - 1 && 0 <= row - 1 + j && row - 1 + j <= 9) {\n            forbidTiles.push({\n              col: col - 1,\n              row: row - 1 + j\n            });\n          }\n\n          if (col + 1 <= 9 && 0 <= row - 1 + j && row - 1 + j <= 9) {\n            forbidTiles.push({\n              col: col + 1,\n              row: row - 1 + j\n            });\n          }\n        }\n\n        if (0 <= row - 1) {\n          forbidTiles.push({\n            row: row - 1,\n            col: col\n          });\n        }\n\n        if (row + size <= 9) {\n          forbidTiles.push({\n            row: row + size,\n            col: col\n          });\n        }\n      }\n\n      return forbidTiles;\n    },\n    checkPlaceability: function checkPlaceability(row, col, orientation, size, shipTiles) {\n      var shipEnd = {\n        row: row,\n        col: col\n      };\n\n      if (orientation == 'width') {\n        shipEnd.col = col - 1 + size;\n      } else {\n        shipEnd.row = row - 1 + size;\n      } // 1. Check if ship sticks outside the board\n\n\n      if (shipEnd.col > 9 || shipEnd.row > 9) {\n        this.sendAlertMessage('Корабль никак не может торчать за картой!');\n        return false;\n      } // 2. Check if ship tiles will cross with forbidden\n      // 2.1. Check each ship tile against forbidden cells and ship cells\n\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(shipTiles), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var tile = _step.value;\n\n          if (this.isTileForbidden(tile.row, tile.col) || this.isTileShip(tile.row, tile.col)) {\n            this.sendAlertMessage('Таранить будем чужие корабли, свои не надо.');\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return true;\n    },\n    printForbidden: function printForbidden() {\n      this.sendAlertMessage('Тут уже что-то есть!');\n    }\n  })\n};",{"version":3,"sources":["FieldGrid.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"pug\">\n  \n  .field-grid\n    template(v-if=\"this.$store.state.currentPlayer == this.player && !(this.$store.state.currentPhase == 'goPlayerOne' || this.$store.state.currentPhase == 'goPlayerTwo')\")\n      template(v-for=\"(row, indexRow) in this.getFieldByParams(this.player)\")\n        div(v-for=\"(cell, indexCell) in row\"\n            @click=\"cell.forbid ? printForbidden() : placeShip(indexRow, indexCell)\"\n            :class=\"{ forbidden: cell.forbid, isShip: cell.ship, mine: cell.mine }\")\n    \n    template(v-if=\"this.$store.state.currentPlayer == this.player && (this.$store.state.currentPhase == 'goPlayerOne' || this.$store.state.currentPhase == 'goPlayerTwo')\")\n      template(v-for=\"(row, indexRow) in this.getFieldByParams(this.player)\")\n        div(v-for=\"(cell, indexCell) in row\"\n            :class=\"{ isShip: cell.ship, mine: cell.mine }\")\n\n</template>\n\n<script>\nimport { mapGetters, mapMutations } from 'vuex'\n\nexport default {\n  name: 'FieldGrid',\n  props: {\n    player: String,\n  },\n\n  computed: {\n    ...mapGetters([\n      'getFieldByParams',\n      'getShipsAvailableByType',\n      'getShipsAvailableAll',\n      'isTileForbidden',\n      'isTileShip',\n      'opponentFieldCheck',\n    ]),\n  },\n\n  methods: {\n    ...mapMutations([\n      'sendAlertMessage',\n      'placeShipHead',\n      'placeShipTiles',\n      'placeForbiddenTiles',\n      'placeMine',\n      'setShipType',\n      'markShipDamaged',\n    ]),\n\n    placeShip (row, col) {\n      let type = this.$store.state.shipPlaceType\n      // Check if there are available ships of selected type\n      if ( this.getShipsAvailableAll <= 0 ) {\n        this.sendAlertMessage('Все корабли запущены. Пора идти в атаку.')\n        return\n      } else if ( this.getShipsAvailableByType(type) <= 0 ) {\n        this.sendAlertMessage('Таких кораблей больше нет. Пиратский бюджет, крюком его по япкам!')\n        this.switchShipButtons(type)\n        return\n      }\n      // Determine size\n      let orientation = this.$store.state.shipPlaceOrientation\n      let size = 1\n      if (type == 'big') {\n        size = 4\n      } else if (type == 'medium') {\n        size = 3\n      } else if (type == 'small') {\n        size = 2\n      } else {\n        size = 1\n      }\n      // Check if placeable\n      let shipTiles = this.getShipTiles(row, col, orientation, size)\n      let isPlaceable = this.checkPlaceability (row, col, orientation, size, shipTiles)\n      if ( isPlaceable ) {\n        // Place head\n        this.placeShipHead ({row: row, col: col, type: type, size: size, orientation: orientation, tiles: shipTiles})\n        // Place ship tiles\n        this.placeShipTiles (shipTiles)\n        // Place forbidden tiles\n        let forbidTiles = this.getTilesToForbid(row, col, orientation, size)\n        this.placeForbiddenTiles (forbidTiles)\n      } else {\n        return\n      }\n      // Cycle ship selection buttons\n      this.switchShipButtons(type)\n    },\n\n    // Switch ship type button to the right if no more ships of this type left\n    switchShipButtons (type) {\n      if (this.getShipsAvailableByType(type) == 0) {\n        if (type == 'big') {\n          this.setShipType('medium')\n        } else if (type == 'medium') {\n          this.setShipType('small')\n        } else if (type == 'small') {\n          this.setShipType('tiny')\n        } else if (type == 'tiny' && this.getShipsAvailableAll !== 0) {\n          this.setShipType('big')\n        } \n      }\n    },\n\n    // Generate a list of ship tiles\n    getShipTiles (row, col, orientation, size) {\n      var shipTiles = [{row: row, col: col}]\n      for (let i = 1; i < size; i++) {\n        if (orientation == 'width') {\n          shipTiles.push({row: row, col: col + i})\n        } else {\n          shipTiles.push({row: row + i, col: col})\n        }\n      }\n      return shipTiles\n    },\n\n    getTilesToForbid (row, col, orientation, size) {\n      let forbidTiles = []\n\n      if (orientation == 'width') {\n        let rowWidth = size + 2\n        for (let i = 0; i < rowWidth; i++) {\n          if ( 0 <= (row - 1) && 0 <= (col - 1 + i) && (col - 1 + i) <= 9 ) {\n            forbidTiles.push({ row: row - 1, col: col - 1 + i })\n          }\n          if ( (row + 1) <= 9 && 0 <= (col - 1 + i) && (col - 1 + i) <= 9 ) {\n            forbidTiles.push({ row: row + 1, col: col - 1 + i })\n          }\n        }\n        if( 0 <= (col - 1) ) { forbidTiles.push({ row: row, col: col - 1 }) }\n        if( (col + size) <= 9 ) { forbidTiles.push({ row: row, col: col + size }) }\n      } else {\n        let rowHeight = size + 2\n        for (let j = 0; j < rowHeight; j++) {\n          if ( 0 <= (col - 1) && 0 <= (row - 1 + j) && (row - 1 + j) <= 9 ) {\n            forbidTiles.push({ col: col - 1, row: row - 1 + j })\n          }\n          if ( (col + 1) <= 9 && 0 <= (row - 1 + j) && (row - 1 + j) <= 9 ) {\n            forbidTiles.push({ col: col + 1, row: row - 1 + j })\n          }\n        }\n        if( 0 <= (row - 1) ) { forbidTiles.push({ row: row - 1, col: col }) }\n        if( (row + size) <= 9 ) { forbidTiles.push({ row: row + size, col: col }) }\n      }\n\n      return forbidTiles\n    },\n\n    checkPlaceability (row, col, orientation, size, shipTiles) {\n      let shipEnd = {row: row, col: col}\n\n      if (orientation == 'width') {\n        shipEnd.col = col - 1 + size\n      } else {\n        shipEnd.row = row - 1 + size\n      }\n      // 1. Check if ship sticks outside the board\n      if (shipEnd.col > 9 || shipEnd.row > 9) {\n        this.sendAlertMessage('Корабль никак не может торчать за картой!')\n        return false\n      }\n      // 2. Check if ship tiles will cross with forbidden\n      // 2.1. Check each ship tile against forbidden cells and ship cells\n      for (let tile of shipTiles) {\n        if ( this.isTileForbidden(tile.row, tile.col) || this.isTileShip(tile.row, tile.col) ) {\n          this.sendAlertMessage('Таранить будем чужие корабли, свои не надо.')\n          return false\n        }\n      }\n      return true \n    },\n\n    printForbidden () {\n      this.sendAlertMessage('Тут уже что-то есть!')\n    },\n  }\n\n}\n</script>\n\n<style lang=\"sass\">\n/* Field Grid */\n$size-vertical: 100vh\n$vh-unit: $size-vertical / 100\n$ship-unit: $vh-unit * 4.4 * 1.333\n\n.field-grid\n  display: grid\n  width: 100%\n  height: 100%\n  grid-template-columns: repeat(10, 1fr)\n  grid-template-rows: repeat(10, 1fr)\n  grid-gap: 2px\n  padding: 2px\n\n.field-grid > div\n  position: relative\n  background-color: rgba(255, 255, 255, 0.1)\n  user-select: none\n\n.goPlayerOne,\n.goPlayerTwo\n  #fieldMy .field-grid > div,\n  #fieldMy .field-grid > div:hover\n    background-color: rgba(255, 255, 255, 0.1)\n\n/* Grid interactions */\n.field-grid > div:hover\n  background-color: rgba(255, 255, 255, 0.2)\n\n.field-grid > div:hover:after\n  position: absolute\n  display: block\n  content: ''\n  width: 100%\n  height: 100%\n  top: 0\n  left: 0\n  background-repeat: no-repeat\n  background-size: cover\n\n.field-grid > div.forbidden\n  background: transparent url('../assets/cross.svg') no-repeat 50% 50% / 50% 50%\n\n.readyPlayerOne,\n.readyPlayerTwo\n  #fieldMy .field-grid > div.forbidden\n    background-color: rgba(255, 255, 255, 0.1)\n    background-image: none\n\n#fieldTheir .field-grid > div.dead\n  background: transparent url('../assets/cross.svg') no-repeat 50% 50% / 20% 20%\n\n.field-grid > div.mine,\n#fieldMy .field-grid > div.mine.forbidden,\n#fieldTheir .field-grid > div.mine.dead\n  background: transparent url('../assets/mine.svg') no-repeat 50% 50% / 60% 60%\n\n.field-grid > div.mine.isShip\n  border: 2px solid #644932\n  background: #a47d52 url('../assets/explosion.svg') no-repeat 50% 50% / 75% 75%\n\n#fieldMy .field-grid > div.mine.isShip\n  position: relative\n  z-index: 1\n  border: none\n  background: transparent url('../assets/explosion.svg') no-repeat 50% 50% / 80% 80%\n\n\n.field-grid > div.forbidden:after,\n.field-grid > div.isShip:after,\n.goPlayerOne .field-grid > div:after,\n.goPlayerTwo .field-grid > div:after\n  display: none\n\n.place-big .field-grid > div:hover:after\n  width: $ship-unit\n  height: $ship-unit * 4\n  background-image: url('../assets/place-vertical-4.svg')\n\n.place-big.orient-width .field-grid > div:hover:after\n  width: $ship-unit * 4\n  height: $ship-unit\n  background-image: url('../assets/place-horizontal-4.svg')\n\n.place-medium .field-grid > div:hover:after\n  width: $ship-unit\n  height: $ship-unit * 3\n  background-image: url('../assets/place-vertical-3.svg')\n\n.place-medium.orient-width .field-grid > div:hover:after\n  width: $ship-unit * 3\n  height: $ship-unit\n  background-image: url('../assets/place-horizontal-3.svg')\n\n.place-small .field-grid > div:hover:after\n  width: $ship-unit\n  height: $ship-unit * 2\n  background-image: url('../assets/place-vertical-2.svg')\n\n.place-small.orient-width .field-grid > div:hover:after\n  width: $ship-unit * 2\n  height: $ship-unit\n  background-image: url('../assets/place-horizontal-2.svg')\n\n.place-tiny .field-grid > div:hover:after\n  width: $ship-unit\n  height: $ship-unit\n  background-image: url('../assets/place-ship-1.svg')\n\n</style>\n"],"sourceRoot":"src/components"}]}
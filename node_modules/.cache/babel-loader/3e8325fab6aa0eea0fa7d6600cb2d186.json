{"remainingRequest":"D:\\git\\warships-evasive\\node_modules\\thread-loader\\dist\\cjs.js!D:\\git\\warships-evasive\\node_modules\\babel-loader\\lib\\index.js!D:\\git\\warships-evasive\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\git\\warships-evasive\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\git\\warships-evasive\\src\\components\\FieldGridOpponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\git\\warships-evasive\\src\\components\\FieldGridOpponent.vue","mtime":1556557786831},{"path":"D:\\git\\warships-evasive\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\warships-evasive\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\warships-evasive\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\git\\warships-evasive\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git\\warships-evasive\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"D:\\\\git\\\\warships-evasive\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapMutations } from 'vuex';\nexport default {\n  name: 'FieldGridOpponent',\n  props: {\n    player: String\n  },\n  computed: _objectSpread({}, mapGetters(['isShotsLeft', 'getFieldByParams', 'opponentFieldCheck', 'getDamagedShip', 'isShipDead', 'checkWinCondition'])),\n  methods: _objectSpread({}, mapMutations(['sendAlertMessage', 'placeMine', 'markShipDamaged', 'markShipDead', 'placeDeadTiles', 'reduceShotsAvailable', 'setLastShot']), {\n    fireCannon: function fireCannon(row, col) {\n      var alertResult = 'Мимо.'; // 0. Check if any shots left for this turn\n\n      if (!this.isShotsLeft) {\n        alertResult = 'Пиратский бюджет позволяет тратить лишь одну бомбу в ход, капитан.';\n        this.sendAlertMessage(alertResult);\n        return;\n      } // 0. Place a mine mark\n\n\n      if (this.opponentFieldCheck(row, col, 'mine') || this.opponentFieldCheck(row, col, 'dead')) {\n        alertResult = 'Сюда мы уже стреляли, капитан.';\n      } else {\n        this.placeMine({\n          row: row,\n          col: col\n        });\n        this.reduceShotsAvailable();\n        this.setLastShot({\n          row: row + 1,\n          col: col + 1\n        });\n      } // 1. Is this a hit?\n\n\n      if (this.opponentFieldCheck(row, col, 'ship')) {\n        // 2. Mark ship as isDamaged\n        this.markShipDamaged({\n          row: row,\n          col: col\n        });\n        alertResult = 'Вражеский корабль поражен!'; // 3. Is this ship completely dead?\n\n        var damagedShip = this.getDamagedShip(row, col);\n\n        if (this.isShipDead(damagedShip)) {\n          this.markShipDead(damagedShip);\n          this.placeDeadTiles(damagedShip);\n          alertResult = 'Вражеский корабль потоплен! Насилуйте сундуки и вскрывайте девок!';\n\n          if (this.checkWinCondition) {\n            alertResult = 'Все враги повержены. Ты - самый крутой пират этих морей, капитан!';\n          }\n        }\n      } // 4. Display alert\n\n\n      this.sendAlertMessage(alertResult);\n    }\n  })\n};",null]}